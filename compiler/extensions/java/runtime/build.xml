<!--

Ant build.xml for Zserio Java runtime library.

The following external properties can be set:

zserio_java_runtime.install_dir - Directory where to install library. Default is "../../distr/runtime_libs/java".
zserio_java_runtime.build_dir   - Directory where to put generated files. Default is "../../build/runtime_libs/java".
zserio.version                  - Zserio version used for Java runtime library version. Default is "unknown".
relational.enable               - Flag whether the relational extension is included. Default is "no".
relational.sqlite_dir           - Directory where SQLite JDBC jar file is located. Default is "../3rdparty".
relational.validation           - Flag whether the support for low level validation is included. Default is "yes".
findbugs.home_dir               - Location of the findbugs tool. If not set, findbugs is not run.

-->
<project name="zserio_java_runtime" default="jar" basedir=".">
    <dirname property="zserio_java_runtime.base_dir" file="${ant.file.zserio_java_runtime}"/>

    <property name="zserio_java_runtime.zserio_root" location="${zserio_java_runtime.base_dir}/../../../.."/>

    <property name="zserio_java_runtime.src_dir" location="${zserio_java_runtime.base_dir}/src"/>
    <property name="zserio_java_runtime.build_dir" value="${zserio_java_runtime.zserio_root}/build/compiler/extensions/java/runtime"/>
    <property name="zserio_java_runtime.classes_dir" value="${zserio_java_runtime.build_dir}/classes"/>
    <property name="zserio_java_runtime.javadocs_dir" value="${zserio_java_runtime.build_dir}/javadocs"/>
    <property name="zserio_java_runtime.findbugs.out_dir" value="${zserio_java_runtime.build_dir}/findbugs"/>

    <property name="zserio_java_runtime.test.src_dir" location="${zserio_java_runtime.base_dir}/test"/>
    <property name="zserio_java_runtime.test.build_dir" value="${zserio_java_runtime.build_dir}/test"/>
    <property name="zserio_java_runtime.test.classes_dir" value="${zserio_java_runtime.test.build_dir}/classes"/>
    <property name="zserio_java_runtime.test.findbugs.out_dir" value="${zserio_java_runtime.test.build_dir}/findbugs"/>
    <property name="zserio_java_runtime.test.results_dir" value="${zserio_java_runtime.test.build_dir}/results"/>

    <property name="zserio_java_runtime.jar_dir" value="${zserio_java_runtime.build_dir}/jar"/>
    <property name="zserio_java_runtime.jar_file" value="${zserio_java_runtime.jar_dir}/zserio_runtime.jar"/>
    <property name="zserio_java_runtime.javadocs_jar_file" value="${zserio_java_runtime.jar_dir}/zserio_runtime_javadocs.jar"/>
    <property name="zserio_java_runtime.sources_jar_file" value="${zserio_java_runtime.jar_dir}/zserio_runtime_sources.jar"/>

    <property name="zserio_java_runtime.3rdparty.root_dir" value="${zserio_java_runtime.base_dir}/../../../../3rdparty"/>
    <property name="zserio_java_runtime.3rdparty.jar_dir" value="${zserio_java_runtime.3rdparty.root_dir}/java"/>
    <property name="zserio_java_runtime.3rdparty.junit.jar_file" location="${zserio_java_runtime.3rdparty.jar_dir}/junit-4.10.jar"/>
    <property name="relational.enable" value="no"/>
    <property name="relational.sqlite.jar_dir" value="${zserio_java_runtime.3rdparty.root_dir}/java"/>
    <property name="relational.sqlite.jar_file_name" value="sqlite-jdbc-3.23.1.jar"/>
    <property name="relational.validation" value="yes"/>

    <property name="zserio_java_runtime.install_dir" value="${zserio_java_runtime.zserio_root}/distr/runtime_libs/java"/>

    <!-- Zserio Java extension runtime version. -->
    <loadfile
        encoding="UTF-8"
        property="zserio_java_runtime.version"
        srcFile="${basedir}/../src/zserio/emit/java/JavaExtensionVersion.java">
        <filterchain>
            <striplinebreaks/>
            <tokenfilter>
                <replaceregex
                    pattern='.*VERSION_STRING\s*=\s*"([0-9]+.[0-9]+)".*'
                    replace="\1"/>
            </tokenfilter>
        </filterchain>
    </loadfile>

    <condition property="relational.enabled" value="true">
        <istrue value="${relational.enable}"/>
    </condition>

    <condition property="relational.validation_enabled" value="true">
        <and>
            <istrue value="${relational.enable}"/>
            <istrue value="${relational.validation}"/>
        </and>
    </condition>

    <uptodate property="zserio_java_runtime.javadocs_up_to_date">
        <srcfiles dir= "${zserio_java_runtime.src_dir}" includes="**/*.java"/>
        <mapper type="merge" to="${zserio_java_runtime.javadocs_dir}/index.html"/>
    </uptodate>

    <target name="clean" depends="test.clean">
        <delete dir="${zserio_java_runtime.build_dir}"/>
    </target>

    <patternset id="zserio_java_runtime.sources_patterns">
        <include name="**/*.java"/>
        <exclude name="zserio/runtime/SqlDatabase.java" unless="relational.enabled"/>
        <exclude name="zserio/runtime/validation/*.java" unless="relational.validation_enabled"/>
    </patternset>

    <fileset id="zserio_java_runtime.sources" dir="${zserio_java_runtime.src_dir}">
        <patternset refid="zserio_java_runtime.sources_patterns"/>
    </fileset>

    <target name="compile">
        <mkdir dir="${zserio_java_runtime.classes_dir}"/>
        <depend srcDir="${zserio_java_runtime.src_dir}" destDir="${zserio_java_runtime.classes_dir}"
            cache="${zserio_java_runtime.build_dir}/depend-cache"/>
        <javac destdir="${zserio_java_runtime.classes_dir}" debug="on" encoding="utf8" includeAntRuntime="false">
            <src path="${zserio_java_runtime.src_dir}"/>
            <patternset refid="zserio_java_runtime.sources_patterns"/>
        </javac>
    </target>

    <target name="javadocs" unless="zserio_java_runtime.javadocs_up_to_date">
        <tstamp>
            <format property="timestamp" pattern="yyyy-MM-dd HH:mm:ss"/>
        </tstamp>
        <javadoc packagenames="zserio.runtime.*" destdir="${zserio_java_runtime.javadocs_dir}">
            <fileset refid="zserio_java_runtime.sources"/>
            <doctitle>
                <![CDATA[<h1>Zserio Java Runtime Library</h1><h2>Version ${zserio_java_runtime.version}</h2]]>
            </doctitle>
            <bottom>
                <![CDATA[<i>Last updated ${timestamp}</i>]]>
            </bottom>
        </javadoc>
    </target>

    <target name="jar" depends="compile, javadocs">
        <jar destfile="${zserio_java_runtime.jar_file}">
            <fileset dir="${zserio_java_runtime.classes_dir}">
                <include name="zserio/runtime/**"/>
            </fileset>
            <manifest>
                <attribute name="Implementation-Version" value="${zserio_java_runtime.version}"/>
            </manifest>
        </jar>

        <jar destfile="${zserio_java_runtime.javadocs_jar_file}">
            <fileset dir="${zserio_java_runtime.javadocs_dir}">
                <include name="**"/>
            </fileset>
            <manifest>
                <attribute name="Implementation-Version" value="${zserio_java_runtime.version}"/>
            </manifest>
        </jar>

        <jar destfile="${zserio_java_runtime.sources_jar_file}">
            <fileset refid="zserio_java_runtime.sources"/>
            <manifest>
                <attribute name="Implementation-Version" value="${zserio_java_runtime.version}"/>
            </manifest>
        </jar>
    </target>

    <target name="install" depends="jar">
        <mkdir dir="${zserio_java_runtime.install_dir}"/>
        <copy file="${zserio_java_runtime.jar_file}" todir="${zserio_java_runtime.install_dir}" overwrite="true"/>
        <copy file="${zserio_java_runtime.javadocs_jar_file}" todir="${zserio_java_runtime.install_dir}" overwrite="true"/>
        <copy file="${zserio_java_runtime.sources_jar_file}" todir="${zserio_java_runtime.install_dir}" overwrite="true"/>
    </target>

    <target name="findbugs" depends="install" if="findbugs.home_dir">
        <mkdir dir="${zserio_java_runtime.findbugs.out_dir}"/>
        <taskdef name="findbugs" classpath="${findbugs.home_dir}/lib/findbugs-ant.jar"
            classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
        <findbugs home="${findbugs.home_dir}"
            output="html"
            outputFile="${zserio_java_runtime.findbugs.out_dir}/findbugs.html"
            excludeFilter="${zserio_java_runtime.base_dir}/findbugs_filter.xml"
            reportLevel="low"
            errorProperty="zserio_java_runtime.findbugs.is_failed"
            warningsProperty="zserio_java_runtime.findbugs.is_failed">
            <sourcePath>
                <dirset dir="${zserio_java_runtime.base_dir}">
                    <include name="src"/>
                </dirset>
            </sourcePath>
            <fileset dir="${zserio_java_runtime.classes_dir}"/>
            <auxClasspath>
                <fileset file="${zserio_java_runtime.3rdparty.junit.jar_file}"/>
            </auxClasspath>
        </findbugs>
        <fail message="FindBugs found some issues!" if="zserio_java_runtime.findbugs.is_failed"/>
    </target>

    <target name="test.clean">
        <delete dir="${zserio_java_runtime.test.build_dir}"/>
    </target>

    <target name="test.compile" depends="jar">
        <mkdir dir="${zserio_java_runtime.test.classes_dir}"/>
        <depend srcDir="${zserio_java_runtime.test.src_dir}" destDir="${zserio_java_runtime.test.classes_dir}"
            cache="${zserio_java_runtime.test.build_dir}/depend-cache"/>
        <javac srcdir="${zserio_java_runtime.test.src_dir}" destdir="${zserio_java_runtime.test.classes_dir}" debug="on"
            encoding="utf8" includeAntRuntime="false">
            <exclude name="zserio/runtime/validation/*.java"
                unless="relational.validation_enabled"/>
            <classpath>
                <pathelement path="${zserio_java_runtime.3rdparty.junit.jar_file}"/>
                <pathelement path="${zserio_java_runtime.jar_file}"/>
            </classpath>
        </javac>
    </target>

    <target name="test.findbugs" depends="findbugs, test.compile" if="findbugs.home_dir">
        <mkdir dir="${zserio_java_runtime.test.findbugs.out_dir}"/>
        <taskdef name="findbugs" classpath="${findbugs.home_dir}/lib/findbugs-ant.jar"
            classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
        <findbugs home="${findbugs.home_dir}"
            output="html"
            outputFile="${zserio_java_runtime.test.findbugs.out_dir}/findbugs.html"
            excludeFilter="${zserio_java_runtime.base_dir}/findbugs_filter.xml"
            reportLevel="low"
            errorProperty="zserio_java_runtime.findbugs.is_failed"
            warningsProperty="zserio_java_runtime.findbugs.is_failed">
            <sourcePath>
                <dirset dir="${zserio_java_runtime.test.src_dir}"/>
            </sourcePath>
            <fileset dir="${zserio_java_runtime.test.classes_dir}"/>
            <auxClasspath>
                <fileset file="${zserio_java_runtime.3rdparty.junit.jar_file}"/>
                <fileset file="${zserio_java_runtime.jar_file}"/>
            </auxClasspath>
        </findbugs>
        <fail message="FindBugs found some issues!" if="zserio_java_runtime.findbugs.is_failed"/>
    </target>

    <target name="test.run" depends="test.findbugs">
        <mkdir dir="${zserio_java_runtime.test.results_dir}"/>
        <junit printsummary="no" fork="yes" dir="${zserio_java_runtime.test.classes_dir}" haltonfailure="yes">
            <classpath>
                <pathelement path="${zserio_java_runtime.3rdparty.junit.jar_file}"/>
                <pathelement path="${zserio_java_runtime.jar_file}"/>
                <pathelement path="${zserio_java_runtime.test.classes_dir}"/>
                <fileset dir="${relational.sqlite.jar_dir}">
                    <include name="${relational.sqlite.jar_file_name}" if="relational.enabled"/>
                </fileset>
            </classpath>
            <batchtest todir="${zserio_java_runtime.test.results_dir}">
                <fileset dir="${zserio_java_runtime.test.src_dir}">
                    <include name="**/*Test.java"/>
                    <exclude name="zserio/runtime/validation/*.java"
                        unless="relational.validation_enabled"/>
                </fileset>
                <formatter type="plain" usefile="false"/>
                <formatter type="xml"/>
            </batchtest>
        </junit>
    </target>

    <target name="test" depends="test.run">
    </target>
</project>
