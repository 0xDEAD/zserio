<!--

Ant build.xml for sql_constraints test example.

The following properties can be set:

zserio.release_dir      - Directory where to find Zserio release to test. Default is "../../../distr".
test.build_dir          - Directory where to put generated files. Default is "../../../build/test".
findbugs.home_dir       - Location of the findbugs tool. If not set, findbugs is not run.

-->
<project name="sql_constraints" basedir="." default="run">
    <dirname property="sql_constraints.base_dir" file="${ant.file.sql_constraints}"/>

    <property name="zserio.root_dir" location="${sql_constraints.base_dir}/../../.."/>
    <property name="zserio.release_dir" location="${zserio.root_dir}/distr"/>
    <property name="zserio.jar_dir" location="${zserio.release_dir}/zserio_libs"/>

    <property name="test.build_dir" location="${zserio.root_dir}/build/test"/>
    <property name="test_utils.jar_file" location="${test.build_dir}/utils/jar/test_utils.jar"/>
    <property name="runtime.jar_dir" location="${zserio.release_dir}/runtime_libs/java"/>
    <property name="3rdparty.root_dir" location="${zserio.root_dir}/3rdparty"/>
    <property name="3rdparty.jar_dir" location="${3rdparty.root_dir}/java"/>

    <property name="sql_constraints.build_dir" location="${test.build_dir}/language/sql_constraints"/>
    <property name="sql_constraints.zs.in_dir" location="${sql_constraints.base_dir}/zs"/>
    <property name="sql_constraints.zs.out_dir" location="${sql_constraints.build_dir}/gen"/>
    <property name="sql_constraints.run_dir" location="${sql_constraints.build_dir}/run"/>

    <property name="sql_constraints.src_dir" location="${sql_constraints.base_dir}/java"/>

    <property name="runtime.jar_file" location="${runtime.jar_dir}/zserio_runtime.jar"/>
    <property name="3rdparty.junit.jar_file" location="${3rdparty.jar_dir}/junit-4.10.jar"/>
    <property name="3rdparty.sqlitejdbc.jar_file" location="${3rdparty.jar_dir}/sqlite-jdbc-3.23.1.jar"/>

    <!-- Zserio Ant task -->
    <taskdef name="zserio" classpath="${zserio.release_dir}/ant_task/zserio_ant.jar" classname="zserio.ant.ZserioTask"/>

    <!-- classpath required for running the Zserio Tool -->
    <path id="zserio.classpath">
        <fileset dir="${zserio.jar_dir}">
            <include name="*.jar"/>
            <exclude name="zserio_ant.jar"/>
        </fileset>
    </path>

    <target name="prepare">
        <mkdir dir="${sql_constraints.build_dir}/classes"/>
    </target>

    <target name="gen" depends="prepare">
        <zserio srcPath="${sql_constraints.zs.in_dir}" srcFile="sql_constraints.zs"
            java="${sql_constraints.zs.out_dir}">
            <arg name="withWriterCode"/>
            <dependencies>
                <fileset dir="${sql_constraints.zs.in_dir}" includes="**/*.zs"/>
                <fileset dir="${zserio.jar_dir}"/>
                <fileset dir="${runtime.jar_dir}"/>
                <fileset file="${ant.file.sql_constraints}"/>
            </dependencies>
            <output>
                <fileset dir="${sql_constraints.zs.out_dir}" includes="**/*.java" erroronmissingdir="false"/>
            </output>
            <classpath>
                <path refid="zserio.classpath"/>
            </classpath>
        </zserio>
    </target>

    <target name="compile" depends="gen">
        <depend srcDir="${sql_constraints.src_dir}:${sql_constraints.zs.out_dir}"
            destDir="${sql_constraints.build_dir}/classes" cache="${sql_constraints.build_dir}/depend-cache"/>
        <javac destdir="${sql_constraints.build_dir}/classes" debug="on" encoding="utf8"
            includeAntRuntime="false">
            <classpath>
                <pathelement location="${runtime.jar_file}"/>
                <pathelement location="${3rdparty.junit.jar_file}"/>
                <pathelement location="${test_utils.jar_file}"/>
            </classpath>
            <src location="${sql_constraints.src_dir}"/>
            <src location="${sql_constraints.zs.out_dir}"/>
        </javac>
    </target>

    <target name="findbugs" depends="compile" if="findbugs.home_dir" description="Run FindBugs">
        <taskdef name="findbugs" classpath="${findbugs.home_dir}/lib/findbugs-ant.jar"
            classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
        <findbugs home="${findbugs.home_dir}"
            output="html"
            outputFile="${sql_constraints.build_dir}/findbugs.html"
            excludeFilter="${sql_constraints.base_dir}/findbugs_filter.xml"
            reportLevel="low"
            errorProperty="sql_constraints.is_failed"
            warningsProperty="sql_constraints.is_failed">
            <sourcePath>
                <dirset dir="${sql_constraints.base_dir}/java"/>
                <dirset dir="${sql_constraints.zs.out_dir}"/>
            </sourcePath>
            <fileset dir="${sql_constraints.build_dir}/classes"/>
            <auxClasspath>
                <fileset file="${runtime.jar_file}"/>
                <fileset file="${3rdparty.junit.jar_file}"/>
                <fileset file="${test_utils.jar_file}"/>
            </auxClasspath>
        </findbugs>
        <fail message="FindBugs found some issues!" if="sql_constraints.is_failed"/>
    </target>

    <target name="run" depends="findbugs">
        <delete dir="${sql_constraints.run_dir}"/>
        <mkdir dir="${sql_constraints.run_dir}"/>
        <junit printsummary="no" fork="on" haltonfailure="on" dir="${sql_constraints.run_dir}">
            <classpath>
                <pathelement location="${sql_constraints.build_dir}/classes"/>
                <pathelement location="${runtime.jar_file}"/>
                <pathelement location="${3rdparty.junit.jar_file}"/>
                <pathelement location="${3rdparty.sqlitejdbc.jar_file}"/>
                <pathelement location="${test_utils.jar_file}"/>
            </classpath>
            <batchtest>
                <fileset dir="${sql_constraints.base_dir}/java" includes="**/*Test.java"/>
                <formatter type="plain" usefile="false"/>
            </batchtest>
        </junit>
    </target>

    <target name="clean">
        <delete dir="${sql_constraints.build_dir}"/>
    </target>
</project>
